<!---
 ----------------------------------------------------------------------------

     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***

 ----------------------------------------------------------------------------

     This file is automatically generated by terraform-codegen and manual
     changes will be clobbered when the file is regenerated.

     Please read more about how to change this file in README.md and
     CONTRIBUTING.md located at the root of this package.

 ----------------------------------------------------------------------------
--->
---
layout: "google"
page_title: "Google: google_compute_url_map"
sidebar_current: "docs-google-compute-url-map"
description: |-
  UrlMaps are used to route requests to a backend service based on rules
---

# google\_compute\_url\_map

UrlMaps are used to route requests to a backend service based on rules
that you define for the host and path of an incoming URL.


## Example Usage

```hcl
resource "google_compute_url_map" "default" {
  TODO: Add fields
}
```

## Argument Reference

The following arguments are supported:

* `default_service` -
  (Required)
  A reference to BackendService resource



- - -

* `description` -
  (Optional)
  An optional description of this resource. Provide this property when
you create the resource.
* `host_rules` -
  (Optional)
  The list of HostRules to use against the URL.
  Structure is documented below.
* `name` -
  (Optional)
  Name of the resource. Provided by the client when the resource is
created. The name must be 1-63 characters long, and comply with
RFC1035. Specifically, the name must be 1-63 characters long and match
the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
first character must be a lowercase letter, and all following
characters must be a dash, lowercase letter, or digit, except the last
character, which cannot be a dash.
* `path_matchers` -
  (Optional)
  The list of named PathMatchers to use against the URL.
  Structure is documented below.
* `tests` -
  (Optional)
  The list of expected URL mappings. Request to update this UrlMap will
succeed only if all of the test cases pass.
  Structure is documented below.
* `project` (Optional) The project in which the resource belongs.
    If it is not provided, the provider project is used.


The `host_rules` block supports:
* `description` -
  (Optional)
  An optional description of this resource. Provide this property
when you create the resource.
* `hosts` -
  (Optional)
  The list of host patterns to match. They must be valid
hostnames, except * will match any string of ([a-z0-9-.]*). In
that case, * must be the first character and must be followed in
the pattern by either - or ..
* `path_matcher` -
  (Optional)
  The name of the PathMatcher to use to match the path portion of
the URL if the hostRule matches the URL's host portion.
  
  
  

The `path_matchers` block supports:
* `default_service` -
  (Optional)
  A reference to BackendService resource
* `description` -
  (Optional)
  An optional description of this resource.
* `name` -
  (Optional)
  The name to which this PathMatcher is referred by the HostRule.
* `path_rules` -
  (Optional)
  The list of path rules.
  Structure is documented below.
  
  
  
  The `path_rules` block supports:
* `paths` -
  (Optional)
  The list of path patterns to match. Each must start with /
and the only place a * is allowed is at the end following
a /. The string fed to the path matcher does not include
any text after the first ? or #, and those chars are not
allowed here.
* `service` -
  (Optional)
  A reference to BackendService resource
  
  
The `tests` block supports:
* `description` -
  (Optional)
  Description of this test case.
* `host` -
  (Optional)
  Host portion of the URL.
* `path` -
  (Optional)
  Path portion of the URL.
* `service` -
  (Optional)
  A reference to BackendService resource
  
  
  
  

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `creation_timestamp` -
  Creation timestamp in RFC3339 text format.
* `id` -
  The unique identifier for the resource.
* `self_link` - The URI of the created resource.




TODO: Add import section
